name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Lint and test
      - name: Lint and Run Tests
        run: |
          npm run lint
          # npm test

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Build the application
      - name: Build Application
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # # Step 4: Deploy to AWS ECS
      # - name: Deploy to AWS ECS
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #   run: |
      #     npm install -g aws-cli
      #     aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment
